{"version":3,"file":"api-endpoints.js","sourceRoot":"","sources":["../../src/api-endpoints.ts"],"names":[],"mappings":";AAAA,0DAA0D;;;AA0B7C,QAAA,iBAAiB,GAAG;IAC/B,MAAM,EAAE,KAAK;IACb,mJAAmJ;IACnJ,UAAU,EAAE,CAAC,aAAa,CAAC;IAC3B,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IACd,IAAI,EAAE,CAAC,CAAkC,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE;CAClE,CAAC;AAmBE,QAAA,cAAc,GAAG;IAC5B,MAAM,EAAE,MAAM;IACd,kIAAkI;IAClI,UAAU,EAAE,CAAC,aAAa,CAAC;IAC3B,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC;IAC/C,IAAI,EAAE,CAAC,CAAkC,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE;CAClE,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-interface */\n\nimport { NotionDatabase, NotionDatabaseFilter, NotionDatabaseSort, NotionPage, PaginatedList } from './api-types';\n\n/**\n * Notion API Endpoints\n *\n * This file contains metadata about each of the API endpoints such as the HTTP method, the parameters, and the types.\n * In the future, the contents of this file will be generated from an API definition.\n */\n\n// TODO: type assertions to verify that each interface is synchronized to the list of keys in the runtime value below.\n\n/*\n * databases.retrieve()\n */\n\ninterface DatabasesRetrievePathParameters {\n  database_id: string;\n}\ninterface DatabasesRetrieveQueryParameters {}\ninterface DatabasesRetrieveBodyParameters {}\n\nexport interface DatabasesRetrieveParameters extends DatabasesRetrievePathParameters, DatabasesRetrieveQueryParameters, DatabasesRetrieveBodyParameters {}\nexport interface DatabasesRetrieveResponse extends NotionDatabase {}\n\nexport const databasesRetrieve = {\n  method: 'get',\n  // The following lists are synchronized with keyof DatabasesRetrievePathParams / DatabasesRetrieveQueryParameters / DatabasesRetrieveBodyParameters\n  pathParams: ['database_id'],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: DatabasesRetrievePathParameters) => `databases/${p.database_id}`,\n} as const;\n\n/*\n * databases.query()\n */\n\ninterface DatabasesQueryPathParameters {\n  database_id: string;\n}\ninterface DatabasesQueryQueryParameters {}\ninterface DatabasesQueryBodyParameters {\n  filter?: NotionDatabaseFilter;\n  sorts?: NotionDatabaseSort[];\n  start_cursor?: string;\n}\n\nexport interface DatabasesQueryParameters extends DatabasesQueryPathParameters, DatabasesQueryQueryParameters, DatabasesQueryBodyParameters {}\nexport interface DatabasesQueryResponse extends PaginatedList<NotionPage> {}\n\nexport const databasesQuery = {\n  method: 'post',\n  // The following lists are synchronized with keyof DatabasesQueryPathParams / DatabasesQueryQueryParams / DatabasesQueryBodyParams\n  pathParams: ['database_id'],\n  queryParams: [],\n  bodyParams: ['filter', 'sorts', 'start_cursor'],\n  path: (p: DatabasesRetrievePathParameters) => `databases/${p.database_id}`,\n} as const;\n\n"]}