{"version":3,"file":"api-types.js","sourceRoot":"","sources":["../../src/api-types.ts"],"names":[],"mappings":";AAAA;;;;;GAKG","sourcesContent":["/**\n * Notion API Types\n *\n * This file contains type definitions for common object types across various interfaces in the Notion API.\n * In the future, the contents of this file will be generated from an API definition.\n */\n\nexport type NotionObject = NotionSingularObject | PaginatedList;\nexport type NotionSingularObject = NotionDatabase | NotionPage;\n\ninterface PropertyFilter {\n  property: string;\n  // title?: TextFilter;\n  // text?: TextFilter;\n  // number?: NumberFilter;\n  // checkbox?: CheckboxFilter;\n  // ...\n}\n\n\n// TODO: fill in the rest of these types\nexport interface NotionDatabase {\n  object: 'database';\n  id: string;\n}\nexport type NotionDatabaseFilter = PropertyFilter; // | ...\nexport interface NotionDatabaseSort {\n  // TODO: either property or timestamp are defined but not both\n  property?: string;\n  timestamp?: 'created_time' | 'last_edited_time';\n  direction: 'ascending' | 'descending';\n}\n\nexport interface NotionPage {\n  object: 'page',\n  id: string;\n}\n\nexport interface PaginatedList<O extends NotionSingularObject = NotionSingularObject> {\n  object: 'list',\n  results: O[],\n  has_more: boolean;\n  next_cursor: string | null;\n}\n"]}