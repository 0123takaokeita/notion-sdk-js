import { NotionDatabase, NotionDatabaseFilter, NotionDatabaseSort, NotionPage, PaginatedList } from './api-types';
/**
 * Notion API Endpoints
 *
 * This file contains metadata about each of the API endpoints such as the HTTP method, the parameters, and the types.
 * In the future, the contents of this file will be generated from an API definition.
 */
interface DatabasesRetrievePathParameters {
    database_id: string;
}
interface DatabasesRetrieveQueryParameters {
}
interface DatabasesRetrieveBodyParameters {
}
export interface DatabasesRetrieveParameters extends DatabasesRetrievePathParameters, DatabasesRetrieveQueryParameters, DatabasesRetrieveBodyParameters {
}
export interface DatabasesRetrieveResponse extends NotionDatabase {
}
export declare const databasesRetrieve: {
    readonly method: "get";
    readonly pathParams: readonly ["database_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly [];
    readonly path: (p: DatabasesRetrievePathParameters) => string;
};
interface DatabasesQueryPathParameters {
    database_id: string;
}
interface DatabasesQueryQueryParameters {
}
interface DatabasesQueryBodyParameters {
    filter?: NotionDatabaseFilter;
    sorts?: NotionDatabaseSort[];
    start_cursor?: string;
}
export interface DatabasesQueryParameters extends DatabasesQueryPathParameters, DatabasesQueryQueryParameters, DatabasesQueryBodyParameters {
}
export interface DatabasesQueryResponse extends PaginatedList<NotionPage> {
}
export declare const databasesQuery: {
    readonly method: "post";
    readonly pathParams: readonly ["database_id"];
    readonly queryParams: readonly [];
    readonly bodyParams: readonly ["filter", "sorts", "start_cursor"];
    readonly path: (p: DatabasesRetrievePathParameters) => string;
};
export {};
//# sourceMappingURL=api-endpoints.d.ts.map