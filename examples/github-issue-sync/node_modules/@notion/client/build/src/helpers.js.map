{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../../src/helpers.ts"],"names":[],"mappings":";;;AACA;;;;;;GAMG;AACH,SAAgB,WAAW,CAAC,EAAS;IACnC,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;AAC/D,CAAC;AAFD,kCAEC;AAGD,SAAgB,IAAI,CAAwC,IAAO,EAAE,IAAkB;IACrF,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,OAAO,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACrC,CAAC;AAHD,oBAGC","sourcesContent":["\n/**\n * Utility for enforcing exhaustiveness checks in the type system.\n *\n * @see https://basarat.gitbook.io/typescript/type-system/discriminated-unions#throw-in-exhaustive-checks\n *\n * @param _x The variable with no remaining values\n */\nexport function assertNever(_x: never): never { // eslint-disable-line @typescript-eslint/no-unused-vars\n  throw new Error('Unexpected value. Should have been never.');\n}\n\n\nexport function pick<O extends unknown, K extends keyof O> (base: O, keys: readonly K[]): Pick<O, K> {\n  const entries = keys.map(key => ([key, base[key]]));\n  return Object.fromEntries(entries);\n}\n"]}